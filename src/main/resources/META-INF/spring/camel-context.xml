<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<!-- This creates an embedded ActiveMQ Broker -->
	
	<broker brokerName="componentABroker" xmlns="http://activemq.apache.org/schema/core" useJmx="true"
		persistent="false">
		
		<transportConnectors>
			<transportConnector uri="tcp://localhost:61616" />
		</transportConnectors>
	</broker>
	
	<broker brokerName="componentBBroker" xmlns="http://activemq.apache.org/schema/core" useJmx="true"
		persistent="false">
		<transportConnectors>
			<transportConnector uri="tcp://localhost:8000" />
		</transportConnectors>
	</broker>
	

	<!-- Start Entpoint at broker A -->
	<bean id="componentAQueue" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="brokerURL" value="failover:tcp://localhost:61616" />
	</bean>

	<!-- Start Entpoint at broker B-->
	<bean id="componentBQueue" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="brokerURL" value="failover:tcp://localhost:8000" />
	</bean>

	<!-- Here is a sample which processes the input files (leaving them in place 
		- see the 'noop' flag), and sends them on a JMS queue. This queue is watched 
		by another route which then performs content based routing on the messages 
		using XPath. -->
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<!--  A route from component A to B -->
		<route>
			<from uri="componentAQueue:queue:CompA.Message" />
			<to uri="log:gesekus.netlevel=INFO" />
			<to uri="componentBQueue:queue:CompA.Message" />
		</route>
	</camelContext>

</beans>
